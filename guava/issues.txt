Unreported issues

ISSUE 1: Ensures for LTLengthOf

class Builder{
	int[] array;
	@IndexOrHigh("array") int count;
	@EnsuresLTLengthOf(expression="count", value="array", offset="#1 - 1")
	void ensureRoomFor(@NonNegative int numberToAdd){
		// implementation
	} 
	void add(int value){
		ensureRoomFor(1);
    	array[count] = value;
    	count += 1;
	}
}

also needs https://github.com/kelloggm/checker-framework/issues/176

ISSUE 2:

int array;
void m(Collection c, @LTLengthOf(value="array", offset="c.size() - 1")){
	@LTLengthOf(value="array", offset="-1") int i;
	for(Object o: c){
		++i;
	}
}

also needs https://github.com/kelloggm/checker-framework/issues/154

ISSUE 3:
private annotation for a public method

ISSUE 4:
  public static byte[] concat(byte[]... arrays) {
    int length = 0;
    for (byte[] array : arrays) {
      length += array.length;
    }
    byte[] result = new byte[length];
    int pos = 0;
    for (byte[] array : arrays) {
      System.arraycopy(array, 0, result, pos, array.length);
      pos += array.length;
    }
    return result;
  }
[WARNING] /home/vlasta/git/guava/guava/src/com/google/common/primitives/Bytes.java:[184,52] [argument.type.incompatible] incompatible types in argument.
  found   : @LTEqLengthOf({"array", "array#num2[index#num3]"}) int
  required: @LTLengthOf(value={"array", "result"}, offset={"0 - 1", "pos - 1"}) int